// Free usage license, author: Chung-Shu Chen 陳鍾樞

digraph G {

  rankdir=LR;
  subgraph cluster_0 {
    style=filled;
    label = "學習";
    node [shape=record,style=filled,color=white]; CPU [label="CPU:|計算機組織與設計：軟硬體介面\n計算機結構 – 量的研究\nMips與Broadcom處理器使用手冊\nVerilog"];
    node [shape=record,style=filled,color=white]; GPU [label="GPU:|OpenGL/glsl, spirv規格 以及 Mali前端與後端程式\nCuda-like語言\nGPU指令集與硬體規格"];
    node [shape=record,style=filled,color=white]; NPU [label="NPU:|Onnx與深度學習\nNPU指令集與硬體規格"];
    node [style=filled,color=white]; COMPILER [label="COMPILER:|llvm前端與後端,lld與compiler-rt\n編譯系統設計 Compilers – Principles, Techniques, & tools\npolly open source\nyacc與lex"];
    node [style=filled,color=white]; OS [label="OS:|Linux Device Driver"]; 
    node [style=filled,color=white]; "SOFTWARE ENGINEERING" [label="SOFTWARE ENGINEERING:|Design Patterns\n物件導向分析書籍與工具(Rational Rose, ...)"]; 
    color=lightgrey;
  }
  subgraph cluster_1 {
    style=filled;
    color=lightgrey;
    label = "應用於工作";
    subgraph cluster_1_1 {
      color=gray;
      label = "llvm CPU toolchain";
      node [style=filled,color=white]; backend [label="設計Cpu0 llvm後端編譯器"];
      node [style=filled,color=white]; linker [label="Cpu0 lld 後端連結器 與 軟體浮點函式庫"];
      node [style=filled,color=white]; verilog [label="修改Cpu0 Verilog"];
    }
    subgraph cluster_1_2 {
      color=gray;
      label = "ARM compiler optimization and simulator";
      node [style=filled,color=white]; armopt [label="ARM compiler optimization"];
      node [style=filled,color=white]; armsim [label="ARM Simulator"];
    }
    node [style=filled,color=white]; gpucompiler [label="GPU編譯器"];
    node [style=filled,color=white]; npucompiler [label="NPU編譯器"];
    subgraph cluster_1_3 {
      color=gray;
      label = "數位機上盒";
      //node [style=filled,color=white]; codewarrior [label="找出Code Warrior編譯器設計錯誤"];
      node [style=filled,color=white]; tinyos [label="設計微作業系統FIFO排程機制"];
      node [style=filled,color=white]; ui [label="使用者介面"];
      node [style=filled,color=white]; io [label="撰寫I/O轉向機制"];
    }
  }
  CPU -> verilog;
  //CPU -> codewarrior;
  CPU -> tinyos;
  CPU -> backend;
  CPU -> linker;
  GPU -> gpucompiler;
  NPU -> npucompiler;
  COMPILER -> npucompiler;
  COMPILER -> backend;
  COMPILER -> gpucompiler;
  COMPILER -> armopt;
  COMPILER -> armsim;
  //COMPILER -> codewarrior;
  COMPILER -> ui;
  OS -> tinyos;
  OS -> io;
  "SOFTWARE ENGINEERING" -> tinyos;
}
